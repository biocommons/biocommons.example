[project]
name = "python-package"
authors = [
    { name = "biocommons contributors", email = "biocommons-dev@googlegroups.com" },
]
description = "Example Package"
readme = "README.md"
license = "Apache-2.0"
requires-python = ">=3.10"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = ["version"]
dependencies = ["coloredlogs ~= 15.0", "pyyaml ~= 6.0"]

[project.optional-dependencies]
tests = [
    "pytest-cov ~= 4.1",
    "pytest ~= 7.1",
    "vcrpy",
    "tox ~= 4.15",
]
docs = ["mkdocs"]

[project.scripts]
marvin-quote = "biocommons.example.__main__:main"

[project.urls]
Homepage = "https://biocommons.github.io/python-package/"
Repository = "https://github.com/biocommons/python-package"
Documentation = "https://biocommons.github.io/python-package/"

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.23.0",
    "ty>=0.0.1a16",
    "pytest-cov>=4.0.0",
    "ruff>=0.11.5",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
]

[build-system]
requires = ["setuptools >= 70.1", "setuptools_scm[toml] ~= 8.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["__pycache__", "*.pyc"]
namespaces = true

[tool.setuptools.package-data]
"*" = ["*.gz", "*.json", "*.yaml"]


[tool.setuptools_scm]

[tool.hatch.build.targets.wheel]
packages = ["src/python_package"]

[tool.ty.environment]
python = "./.venv"
python-version = "3.9"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]
