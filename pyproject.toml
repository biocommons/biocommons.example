[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools >= 70.1", "setuptools_scm[toml] ~= 8.1"]

[dependency-groups]
dev = [
  "deptry>=0.23",
  "mkdocs-material>=9.6",
  "mkdocs>=1.6",
  "mkdocstrings[python]>=0.30",
  "mypy>=1.17",
  "pre-commit>=4.3",
  "pytest-cov>=4.1",
  "pytest>=7.4",
  "ruff==0.12.11",
  "tox-uv>=1.28"
]

[project]
authors = [
  {email = "biocommons-dev@googlegroups.com", name = "biocommons contributors"}
]
classifiers = [
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python",
  "Topic :: Software Development :: Libraries :: Python Modules"
]
dependencies = ["coloredlogs ~= 15.0", "pyyaml ~= 6.0"]
description = "biocommons.example package (namespaced)"
dynamic = ["version"]
license = "Apache-2.0"
name = "biocommons-example"
readme = "README.md"
requires-python = ">=3.11"

[project.optional-dependencies]
example = [
  "pyyaml"
]

[project.scripts]
marvin-quote = "biocommons.example.__main__:main"

[project.urls]
Documentation = "https://biocommons.github.io/python-package/"
Homepage = "https://biocommons.github.io/python-package/"
Issues = "https://github.com/biocommons/python-package/issues"
Repository = "https://github.com/biocommons/python-package"

[tool.coverage]

[tool.coverage.report]
exclude_lines = [
  # Don't complain about missing debug-only code:
  "def __repr__",
  # Don't complain if non-runnable code isn't run:
  "if __name__ == .__main__.:",
  "if self.debug",
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError"
]
show_missing = true
skip_empty = true

[tool.coverage.run]
branch = true
omit = ["*/test/*", "*/tests/*", "*_test.py"]
source = ["src"]

[tool.deptry]

[tool.deptry.package_module_name_map]
# map package name to import name
# Making this explicit suppresses deptry notices
coloredlogs = "coloredlogs"
mkdocs = "mkdocs"
mkdocs-material = "mkdocs_material"
mkdocstrings = "mkdocstrings"
mypy = "mypy"
pre-commit = "pre_commit"
pytest = "pytest"
pytest-cov = "pytest_cov"
pyyaml = "yaml"
ruff = "ruff"
tox-uv = "tox_uv"
ty = "ty"

[tool.pytest.ini_options]
addopts = "-s -v -x --strict-markers -m 'not extra' --doctest-modules --cov=src"
doctest_optionflags = [
  "ALLOW_BYTES",
  "ALLOW_UNICODE",
  "ELLIPSIS",
  "IGNORE_EXCEPTION_DETAIL",
  "NORMALIZE_WHITESPACE"
]
markers = [
  "network: tests that require network connectivity",
  "slow: slow tests that should be run infrequently"
]
testpaths = ["tests"]

[tool.ruff]
exclude = [
  "bin",
  "docs",
  "sbin"
]
fix = true
line-length = 100
src = ["src", "tests"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
ignore = [
  "AIR",
  "ANN002",
  "ANN003",
  "C90",
  "COM812", # ignore for compatibility with formatter
  "CPY",
  "D105",
  "D203",
  "D205",
  "D206",
  "D213", # conflicts with D212
  "D300", # ignore for compatibility with formatter
  "D400",
  "D401",
  "D403",
  "D415",
  "DJ",
  "E111", # ignore for compatibility with formatter
  "E114", # ignore for compatibility with formatter
  "E117", # ignore for compatibility with formatter
  "E501", # ignore for compatibility with formatter
  "EM",
  "ERA",
  "EXE",
  "FA",
  "FAST",
  "FBT",
  "FIX",
  "INT",
  "NPY",
  "PD",
  "PGH003",
  "PLR0904", # subjective pylint threshold
  "PLR091", # subjective pylint threshold
  "PLR1702", # subjective pylint threshold
  "PYI",
  "RET504",
  "TC",
  "TD",
  "TID",
  "TRY003",
  "W191",
  "YTT"
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "ANN001",
  "ANN2",
  "B011",
  "BLE001",
  "D10",
  "D100",
  "INP001",
  "S101",
  "SLF001"
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.gz", "*.json", "*.yaml"]

[tool.setuptools.packages.find]
exclude = ["*.pyc", "__pycache__"]
namespaces = true
where = ["src"]

[tool.setuptools_scm]
